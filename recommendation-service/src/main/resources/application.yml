spring:
  cloud:
    stream:
      bindings:
        user:
          destination: user
          group: user-group
          contentType: 'application/json'
          consumer:
            durableSubscription: false
            concurrency: 5
            instanceIndex: 1
        friend:
          destination: friend
          group: friend-group
          contentType: 'application/json'
          consumer:
            durableSubscription: false
            concurrency: 5
            instanceIndex: 1
  profiles:
    active: development
server:
  port: ${PORT:${SERVER_PORT:8110}}
---
spring:
  profiles: development
  data:
    neo4j:
      uri: "bolt://localhost:7687"
  cloud:
    stream:
      kafka:
        binder:
          brokers: "localhost:9092"
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
---
spring:
  profiles: docker
  data:
    neo4j:
      uri: "bolt://neo4j:7687"
  cloud:
    stream:
      kafka:
        binder:
          brokers: "kafka:29092"
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
---
spring:
  profiles: test